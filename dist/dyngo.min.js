/*   Copyright 2015 Nortal AS
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
angular.module("dyngo",["dyngo.form","dyngo.container","dyngo.component","dyngo.component.provider","dyngo.component.defaults","dyngo.functions","dyngo.translator"]),angular.module("dyngo.component",["dyngo.translator","dyngo.component.provider","dyngo.component.templates","checklist-model","mgcrea.ngStrap.popover","ngSanitize","ngMessages"]).controller("ComponentCtrl",["$scope","dgTranslator",function(n,e){n.evaluateConstraint=function(e){if(angular.isUndefined(n.constraints)||angular.isUndefined(n.constraints[e]))return null;var t=n.constraints[e];return"string"==typeof t?n.$eval(t,n.data):"number"==typeof t?t:"boolean"==typeof t?t:null},n.min=function(){return n.evaluateConstraint("min")},n.max=function(){return n.evaluateConstraint("max")},n.setData=function(e){angular.isUndefined(e)||null===e||angular.isNumber(e)&&isNaN(e)?n.data[n.id]=void 0:angular.equals(n.data[n.id],e)||(n.data[n.id]=e)},n.localize=function(t){if(!angular.isUndefined(t)){var o=e.translate(n.formName,t,n.lang);return o.replace(/{{([^}]*)}}/g,function(e,t){return n.$eval(t,n.data)})}}}]),angular.module("dyngo.component.defaults",["dyngo.component.provider"]).run(["dgComponentProvider",function(n){n.registerComponent("textInput",{group:"Default",label:"Text Input",templateUrl:"templates/text.html"}),n.registerComponent("numberInput",{group:"Default",label:"Text Input",templateUrl:"templates/number.html"}),n.registerComponent("checkbox",{group:"Default",label:"Checkbox",templateUrl:"templates/checkbox.html"}),n.registerComponent("radio",{group:"Default",label:"Radio",templateUrl:"templates/radio.html"}),n.registerComponent("select",{group:"Default",label:"Select",templateUrl:"templates/select.html"}),n.registerComponent("header",{group:"static-controls",templateUrl:"templates/header.html"}),n.registerComponent("staticText",{group:"static-controls",templateUrl:"templates/static-text.html"}),n.registerComponent("hidden",{group:"Default",templateUrl:"templates/hidden.html"}),n.registerComponent("panel",{group:"containers",templateUrl:"templates/panel.html"})}]),angular.module("dyngo.component").directive("dgComponent",["$compile","$parse","dgComponentProvider","dgFunctionProvider","$log","$http","$templateCache",function(n,e,t,o,a,i,r){return{restrict:"A",require:"ngModel",scope:{data:"=ngModel",component:"=dgComponent"},controller:"ComponentCtrl",link:function(l,d,s){function c(){l.formName=l.$parent.formName,l.formModel=l.$parent.formModel,l.lang=l.$parent.lang,l.id=p.id,l.label=l.localize(p.label),l.description=p.description,l.placeholder=p.placeholder,l.options=p.options||l.$component.options||[],l.constraints=angular.extend({},l.$component.constraints,p.constraints)}function u(){var e=n(l.$component.template)(l);d.append(e)}function m(){angular.isDefined(p.defaultValue)&&angular.isUndefined(l.data[p.id])&&(l.data[p.id]=p.defaultValue)}var p=l.component=e(s.dgComponent)(l);if(l.$component=t.components[p.type],angular.isUndefined(l.$component)){var g='<div class="alert alert-warning" role="alert">Unknown component type: <strong>{{component.type}}</strong></div>';return a.error("Unknown component type:",p.type),void d.append(n(g)(l))}c(),m(),angular.isUndefined(l.$component.template)?i.get(l.$component.templateUrl,{cache:r}).success(function(n){l.$component.template=n,u()}):u(),angular.isDefined(p.functions)&&l.$watch("data",function(){o.executeFunctions(l,l.component,l.data)},!0)}}}]),angular.module("dyngo.component.provider",[]).provider("dgComponentProvider",function(){this.components={},this.registerComponent=function(n,e){angular.isUndefined(e)||angular.isUndefined(n)||angular.isUndefined(this.components[n])&&(this.components[n]=e)},this.$get=function(){return{components:this.components,registerComponent:this.registerComponent}}}),angular.module("dyngo.container",[]).controller("ContainerCtrl",["$scope",function(n){n.visible=function(e){var t=!0,o=function(e){delete n.data[e.id],angular.forEach(e.components,function(n){o(n)})},a=e.constraints?e.constraints.visible:void 0;return t&&angular.isDefined(a)&&(t=n.$eval(a,n.data)),t||o(e),t}}]).directive("dgContainer",function(){return{restrict:"A",require:"ngModel",scope:{container:"=dgContainer",data:"=ngModel"},template:'<div ng-repeat="component in container.components" dg-component="component" ng-model="data" ng-if="visible(component)"></div>',controller:"ContainerCtrl",link:function(n){n.formModel=n.$parent.formModel,n.formName=n.$parent.formName,n.lang=n.$parent.lang}}}),angular.module("dyngo.form",["dyngo.translator"]).provider("dyngo",function(){var n={forms:{}},e=this;return n.registerForm=function(t,o,a){angular.isDefined(t)&&angular.isDefined(o)&&(n.forms[t]={name:t,structure:o,options:a},e.dgTranslator.registerDictionary(t,o.translations))},n.getForm=function(e){return n.forms[e]},{$get:["dgTranslator",function(t){return e.dgTranslator=t,n}]}}).controller("FormCtrl",["$scope","dyngo","$log",function(n,e,t){n.form=e.getForm(n.formName),angular.isUndefined(n.form)&&t.error('Form "'+n.formName+'" is not registered.')}]).directive("dgForm",function(){return{restrict:"A",require:"ngModel",scope:{formName:"@dgForm",formModel:"=dgForm",lang:"@dgLang",data:"=ngModel"},controller:"FormCtrl",template:'<div dg-container="form.structure" ng-model="data" ng-if="form"></div>'}}),angular.module("dyngo.functions",[]).provider("dgFunctionProvider",function(){var n={functions:[]};n.registerFunction=function(e,t){n.functions.push(e),n[e]=t},n.get=function(e){return n[e]||angular.noop};var e=function(e){angular.forEach(n.functions,function(t){angular.isUndefined(e[t])&&(e[t]=n[t])})};n.executeFunctions=function(n,t,o){e(n),angular.forEach(t.functions,function(e){n.$eval(e,o)})};var t=function(n,e){var t=Math.pow(10,angular.isDefined(e)?e:2);return Math.round(n*t)/t};return{$get:function(){return n.registerFunction("round",t),n}}}),angular.module("dyngo.translator",[]).value("dgDictionary",{}).service("dgTranslator",["dgDictionary",function(n){this.registerDictionary=function(e,t){n[e]=t||{}},this.translate=function(e,t,o){var a,i=n[e];return angular.isDefined(i)&&angular.isDefined(i[o])&&(a=i[o][t]),angular.isUndefined(a)&&(a=t),a}}]).filter("dgTranslate",["dgTranslator",function(n){return function(e,t,o){return n.translate(t,e,o)}}]),function(n){try{n=angular.module("dyngo.component.templates")}catch(e){n=angular.module("dyngo.component.templates",[])}n.run(["$templateCache",function(n){n.put("templates/checkbox.html",'<div class="form-group">\n\n  <label for="{{id+\'_\'+$index}}" class="col-sm-4 control-label"\n         ng-class="{required : constraints.required}">{{label}}</label>\n\n  <div class="col-sm-4">\n    <div class="checkbox" ng-repeat="option in options track by option.code">\n      <label>\n        <input type="checkbox" id="{{id+\'_\'+$index}}" name="{{id}}" checklist-model="data[id]"\n               checklist-value="option.code" ng-value="option.code" ng-disabled="constraints.disabled"\n               ng-required="constraints.required && (!data[id] || data[id].length == 0)">{{option.text}}\n      </label>\n    </div>\n\n    <div ng-messages="formModel[id].$error" class="message-invalid"\n         ng-if="formModel.submitPressed && constraints.required && (!data[id] || data[id].length == 0)">\n      <div ng-message="required">{{localize("error.no_item_selected")}}</div>\n    </div>\n  </div>\n\n</div>\n')}])}(),function(n){try{n=angular.module("dyngo.component.templates")}catch(e){n=angular.module("dyngo.component.templates",[])}n.run(["$templateCache",function(n){n.put("templates/header.html",'<div class="page-header">\n  <h2>{{label}}</h2>\n</div>')}])}(),function(n){try{n=angular.module("dyngo.component.templates")}catch(e){n=angular.module("dyngo.component.templates",[])}n.run(["$templateCache",function(n){n.put("templates/hidden.html",'<div class="form-group">\n\n  <div class="col-sm-4"></div>\n\n  <div class="col-sm-4">\n    <input type="hidden" ng-model="data[id]">\n  </div>\n\n</div>')}])}(),function(n){try{n=angular.module("dyngo.component.templates")}catch(e){n=angular.module("dyngo.component.templates",[])}n.run(["$templateCache",function(n){n.put("templates/number.html",'<div class="form-group">\n  <label for="{{id}}" class="col-sm-4 control-label"\n         ng-class="{required : constraints.required}">{{label}}</label>\n\n  <div class="col-sm-4" ng-switch on="description !== undefined">\n\n    <div class="input-group" ng-switch-when="true">\n\n      <input type="number" id="{{id}}" name="{{id}}" ng-model="data[id]" class="form-control"\n             placeholder="{{placeholder}}"\n             min="{{min()}}" max="{{max()}}"\n             ng-disabled="constraints.disabled" ng-required="constraints.required"/>\n       <span class="input-group-btn">\n         <button type="button" class="btn btn-default"\n                 data-placement="right" title="{{description.title}}" data-content="{{description.content}}"\n                 data-trigger="click" bs-popover>\n           <span class="glyphicon glyphicon-question-sign"></span>\n         </button>\n      </span>\n    </div>\n\n    <div ng-switch-default>\n      <input type="number" id="{{id}}" name="{{id}}" ng-model="data[id]" class="form-control"\n             placeholder="{{placeholder}}"\n             min="{{min()}}" max="{{max()}}"\n             ng-disabled="constraints.disabled" ng-required="constraints.required"/>\n    </div>\n    <div ng-messages="formModel[id].$error" class="message-invalid" ng-if="formModel.submitPressed">\n      <div ng-message="required">{{localize("error.required_field")}}</div>\n      <div ng-message="max">{{localize("error.value_is_gt_max")}}</div>\n      <div ng-message="min">{{localize("error.value_is_lt_min")}}</div>\n    </div>\n\n  </div>\n\n</div>\n')}])}(),function(n){try{n=angular.module("dyngo.component.templates")}catch(e){n=angular.module("dyngo.component.templates",[])}n.run(["$templateCache",function(n){n.put("templates/panel.html",'<div class="panel panel-default">\n  <div class="panel-heading" ng-if="label">\n    <h3 class="panel-title">{{label}}</h3>\n  </div>\n  <div class="panel-body">\n    <div dg-container="component" ng-model="data"></div>\n  </div>\n</div>\n')}])}(),function(n){try{n=angular.module("dyngo.component.templates")}catch(e){n=angular.module("dyngo.component.templates",[])}n.run(["$templateCache",function(n){n.put("templates/radio.html",'<div class="form-group">\n\n  <label class="col-sm-4 control-label"\n         ng-class="{required : constraints.required}">{{label}}</label>\n\n  <div class="col-sm-4">\n    <div class="radio" ng-repeat="option in options track by option.code">\n      <label>\n        <input type="radio" name="{{id}}" id="{{id+\'_\'+$index}}" ng-model="data[id]"\n               ng-value="option.code"\n               ng-disabled="constraints.disabled" ng-required="constraints.required">{{localize(option.text)}}\n      </label>\n    </div>\n\n    <div ng-messages="formModel[id].$error" class="message-invalid" ng-if="formModel.submitPressed">\n      <div ng-message="required">{{localize("error.no_item_selected")}}</div>\n    </div>\n  </div>\n\n</div>\n')}])}(),function(n){try{n=angular.module("dyngo.component.templates")}catch(e){n=angular.module("dyngo.component.templates",[])}n.run(["$templateCache",function(n){n.put("templates/select.html",'<div class="form-group">\n\n  <label for="{{id}}" class="col-sm-4 control-label"\n         ng-class="{required : constraints.required}">{{label}}</label>\n\n  <div class="col-sm-4" ng-switch on="description !== undefined">\n\n    <div class="input-group" ng-switch-when="true">\n      <select id="{{id}}" name="{{id}}" class="form-control"\n              ng-options="option.code as option.value | dgTranslate:formName:lang for option in options"\n              ng-model="data[id]" ng-disabled="constraints.disabled" ng-required="constraints.required">\n        <option></option>\n      </select>\n       <span class="input-group-btn">\n         <button type="button" class="btn btn-default"\n                 data-placement="right" title="{{description.title}}" data-content="{{description.content}}"\n                 data-trigger="click" bs-popover>\n           <span class="glyphicon glyphicon-question-sign"></span>\n         </button>\n      </span>\n    </div>\n\n    <div ng-switch-default>\n      <div class="select">\n        <select id="{{id}}" name="{{id}}" class="form-control"\n                ng-options="option.code as option.value | dgTranslate:formName:lang for option in options"\n                ng-model="data[id]" ng-disabled="constraints.disabled" ng-required="constraints.required">\n          <option></option>\n        </select>\n      </div>\n    </div>\n\n    <div ng-messages="formModel[id].$error" class="message-invalid" ng-if="formModel.submitPressed">\n      <div ng-message="required">{{localize("error.no_item_selected")}}</div>\n    </div>\n\n  </div>\n\n\n</div>\n')}])}(),function(n){try{n=angular.module("dyngo.component.templates")}catch(e){n=angular.module("dyngo.component.templates",[])}n.run(["$templateCache",function(n){n.put("templates/static-text.html",'<div class="form-group">\n  <p class="static-text" ng-bind-html="label"></p>\n</div>\n')}])}(),function(n){try{n=angular.module("dyngo.component.templates")}catch(e){n=angular.module("dyngo.component.templates",[])}n.run(["$templateCache",function(n){n.put("templates/text.html",'<div class="form-group" ng-class="{\'has-error\': formModel[id].$touched && formModel[id].$invalid}">\n  <label for="{{id}}" class="col-sm-4 control-label"\n         ng-class="{required : constraints.required}">{{label}}</label>\n\n  <div class="col-sm-4" ng-switch on="description !== undefined">\n\n    <div class="input-group" ng-switch-when="true">\n\n      <input type="text" id="{{id}}" name="{{id}}" ng-model="data[id]" class="form-control"\n             placeholder="{{placeholder}}"\n             ng-minlength="constraints.min" ng-maxlength="constraints.max" ng-disabled="constraints.disabled"\n             ng-required="constraints.required"/>\n       <span class="input-group-btn">\n         <button type="button" class="btn btn-default"\n                 data-placement="right" title="{{description.title}}" data-content="{{description.content}}"\n                 data-trigger="click" bs-popover>\n           <span class="glyphicon glyphicon-question-sign"></span>\n         </button>\n      </span>\n    </div>\n\n    <div ng-switch-default>\n      <input type="text" id="{{id}}" name="{{id}}" ng-model="data[id]" class="form-control"\n             placeholder="{{placeholder}}"\n             ng-minlength="constraints.min" ng-maxlength="constraints.max" ng-disabled="constraints.disabled"\n             ng-required="constraints.required"/>\n    </div>\n\n    <div ng-messages="formModel[id].$error" class="message-invalid"\n         ng-if="formModel[id].$touched && formModel[id].$invalid">\n      <span class="help-block" ng-message="required">{{localize("error.required_field")}}</span>\n    </div>\n  </div>\n\n</div>\n')}])}();